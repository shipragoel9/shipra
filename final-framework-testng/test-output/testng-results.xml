<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="98250" started-at="2020-07-09T18:03:40 IST" finished-at="2020-07-09T18:05:18 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="98250" started-at="2020-07-09T18:03:40 IST" finished-at="2020-07-09T18:05:18 IST">
      <class name="com.training.sanity.tests.AddMulProductNegativeTests">
        <test-method status="PASS" signature="setUpBeforeClass()[pri:0, instance:com.training.sanity.tests.AddMulProductNegativeTests@4f063c0a]" name="setUpBeforeClass" is-config="true" duration-ms="9" started-at="2020-07-09T18:03:40 IST" finished-at="2020-07-09T18:03:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.training.sanity.tests.AddMulProductNegativeTests@4f063c0a]" name="setUp" is-config="true" duration-ms="12858" started-at="2020-07-09T18:03:40 IST" finished-at="2020-07-09T18:03:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="AddProduct(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.training.sanity.tests.AddMulProductNegativeTests@4f063c0a]" name="AddProduct" duration-ms="12739" started-at="2020-07-09T18:03:53 IST" data-provider="productNeg-inputs" finished-at="2020-07-09T18:04:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[  ]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[  ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[  ]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[  ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[  ]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[  ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddProduct -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.training.sanity.tests.AddMulProductNegativeTests@4f063c0a]" name="tearDown" is-config="true" duration-ms="1979" started-at="2020-07-09T18:04:06 IST" finished-at="2020-07-09T18:04:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.training.sanity.tests.AddMulProductNegativeTests@4f063c0a]" name="setUp" is-config="true" duration-ms="11124" started-at="2020-07-09T18:04:08 IST" finished-at="2020-07-09T18:04:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="AddProduct(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.training.sanity.tests.AddMulProductNegativeTests@4f063c0a]" name="AddProduct" duration-ms="12495" started-at="2020-07-09T18:04:19 IST" data-provider="productNeg-inputs" finished-at="2020-07-09T18:04:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Onida]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[  ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[  ]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[  ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[  ]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[  ]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[  ]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[  ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddProduct -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.training.sanity.tests.AddMulProductNegativeTests@4f063c0a]" name="tearDown" is-config="true" duration-ms="1867" started-at="2020-07-09T18:04:32 IST" finished-at="2020-07-09T18:04:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.training.sanity.tests.AddMulProductNegativeTests@4f063c0a]" name="setUp" is-config="true" duration-ms="11557" started-at="2020-07-09T18:04:34 IST" finished-at="2020-07-09T18:04:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="AddProduct(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.training.sanity.tests.AddMulProductNegativeTests@4f063c0a]" name="AddProduct" duration-ms="8507" started-at="2020-07-09T18:04:45 IST" data-provider="productNeg-inputs" finished-at="2020-07-09T18:04:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[       ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[     ]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[      ]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[    ]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[      ]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy11.sendKeys(Unknown Source)
at com.training.pom.AddMulitpleProductWithRewardPOM.sendData(AddMulitpleProductWithRewardPOM.java:85)
at com.training.sanity.tests.AddMulProductNegativeTests.AddProduct(AddMulProductNegativeTests.java:68)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddProduct -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.training.sanity.tests.AddMulProductNegativeTests@4f063c0a]" name="tearDown" is-config="true" duration-ms="1891" started-at="2020-07-09T18:04:54 IST" finished-at="2020-07-09T18:04:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.training.sanity.tests.AddMulProductNegativeTests@4f063c0a]" name="setUp" is-config="true" duration-ms="11405" started-at="2020-07-09T18:04:55 IST" finished-at="2020-07-09T18:05:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="AddProduct(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.training.sanity.tests.AddMulProductNegativeTests@4f063c0a]" name="AddProduct" duration-ms="9229" started-at="2020-07-09T18:05:07 IST" data-provider="productNeg-inputs" finished-at="2020-07-09T18:05:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[       ]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[     ]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[7000.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Electronic]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[600.0]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[15.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at com.training.pom.AddProductPOM.sendGeneral(AddProductPOM.java:71)
at com.training.sanity.tests.AddMulProductNegativeTests.AddProduct(AddMulProductNegativeTests.java:67)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddProduct -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.training.sanity.tests.AddMulProductNegativeTests@4f063c0a]" name="tearDown" is-config="true" duration-ms="1985" started-at="2020-07-09T18:05:16 IST" finished-at="2020-07-09T18:05:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.training.sanity.tests.AddMulProductNegativeTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
